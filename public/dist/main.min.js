"use strict";var Sigine=angular.module("Sigine",["indexControllers","ngRoute","smart-table","toggle-switch","ui.bootstrap","blockUI","flexForm","LocalStorageModule"]);Sigine.directive("focusMe",function(a,b){return{link:function(a,b,c){setTimeout(function(){$(b[0]).select()},100)}}}),Sigine.config(["$routeProvider",function(a){a.when("/index",{templateUrl:"partials/index.html",controller:"GeneList"}).when("/result/:shareID",{templateUrl:"partials/result.html",controller:"resultCtrl"}).otherwise({redirectTo:"/index"})}]),Sigine.config(["localStorageServiceProvider",function(a){a.setPrefix("Sigine").setStorageType("localStorage").setNotify(!0,!0)}]);var indexControllers=angular.module("indexControllers",["services"]),baseURL=window.location.protocol+"//"+window.location.host+"/L1000CDS2/";indexControllers.controller("index",["$scope","$http",function(a,b){a.searchCount=null,a.updateCount=function(){b.get(baseURL+"count").success(function(b){a.searchCount=b})},a.updateCount()}]);var process=_.identity;indexControllers.controller("GeneList",["$scope","$http","$modal","loadExample","buildQueryData","resultStorage","$location","ffClean","localStorageService","util",function(a,b,c,d,e,f,g,h,i,j){a.aggravate=!1,a.share=!1,a.inputMeta=[{key:"Tag",value:"",dataPlaceholder:"add a tag"},{key:"Cell",value:""},{key:"Perturbation",value:""},{key:"Time point",value:""}],a.history=[];var k=50,l=5,m=i.keys();if(m.length>0){if(m.sort(function(a,b){return j.getTimeStamp(b)-j.getTimeStamp(a)}),m.length>k){var n=m.splice(k,m.length-k);i.remove.apply(this,n)}a.historyTotal=m.length,a.addHistory=function(){a.history=a.history.concat(m.slice(a.history.length,a.history.length+l).map(function(a){var b={};return b.search=i.get(a),b.tag=j.getTag(b.search.input.meta),b.id=a,b}))},a.addHistory()}a.goToResultView=function(a,b){a in f||(f[a]=b),g.path("/result/"+a)},a.inputType=function(){var b=!1;if(a.upGenes){var c=S(a.upGenes).trim().split("\n")[0].split(",");if(c.length>1){var d=parseFloat(c[1]);!isNaN(d)&&isFinite(d)&&(b="CD")}else a.dnGenes&&(b="geneSet")}return b},a.search=function(){a.err=!1;var c=e(a);c.meta=h(a.inputMeta),b.post(baseURL+"query",c).success(function(b){if("err"in b)a.err=b.err[0];else{a.updateCount();var d={};d.entries=b.topMeta,d.input=c,"uniqInput"in b&&(d.uniqInput=b.uniqInput),i.set(b.shareId,d),a.goToResultView(b.shareId,d)}})},a.clear=function(b){a[b]=""},a.showExamples=function(){var d=c.open({templateUrl:baseURL+"examples.html",controller:"exampleModalCtrl",size:"lg"});d.result.then(function(c){a.inputMeta=[{key:"Tag",value:c.term},{key:"Tissue",value:c.desc}],b.get(baseURL+"disease?id="+c._id).success(function(b){var c=[];b.genes.forEach(function(a,d){c.push(a+","+b.vals[d])}),a.upGenes=c.join("\n"),a.search()})})},a.loadDefaultExample=function(){d["default"]().then(function(b){a.upGenes=b.up,a.dnGenes=b.dn,a.inputMeta[0].value="Gene-set Example"})},a.loadSignatureExample=function(){d.signature().then(function(b){a.upGenes=b,a.inputMeta[0].value="Signature Example"})},a.showEbovs=function(){var b=c.open({templateUrl:baseURL+"ebovs.html",controller:"ebovsModalCtrl"});b.result.then(function(b){var c=b.name.split(" ")[2]+b.name.split(" ")[3];a.inputMeta=[{key:"Tag",value:b.name},{key:"Cell",value:"Hela"},{key:"Perturbation",value:"Ebola virus"},{key:"Time point",value:c}];var d=[];b.genes.forEach(function(a,c){d.push(a+","+b.vals[c])}),a.upGenes=d.join("\n"),a.search()})}}]),indexControllers.controller("exampleModalCtrl",["$scope","$modalInstance","loadGEO","matchByNameFactory",function(a,b,c,d){var e;$(".st-selected").removeClass("st-selected"),c.then(function(b){e=d(b,function(a){return a.term+a.desc}),a.diseases=b}),a.selectedEntry="not-yet",a.cancel=function(){b.dismiss("cancel")},a.ok=function(){var a=$(".st-selected td:first-child").text(),c=$(".st-selected td:last-child").text();a?b.close(e(a+c)):b.dismiss("cancel")}}]),indexControllers.controller("ebovsModalCtrl",["$scope","$modalInstance","loadEbovs","matchByNameFactory",function(a,b,c,d){var e;$(".st-selected").removeClass("st-selected"),c.then(function(b){e=d(b,function(a){return a.name}),a.diseases=b}),a.selectedEntry="not-yet",a.cancel=function(){b.dismiss("cancel")},a.ok=function(){var a=$(".st-selected td:first-child").text();a?b.close(e(a)):b.dismiss("cancel")}}]),indexControllers.controller("resultCtrl",["$scope","$routeParams","resultStorage","$http","util","localStorageService",function(a,b,c,d,e,f){function g(){if(a.overlap={},a.tag=e.getTag(a.input.meta),"geneSet"==a.input.config.searchMethod){a.overlap.templateUrl="partials/overlap_geneSet.html";var b=Object.keys(a.entries[0].overlap).sort();a.overlap.key1=b[1],a.overlap.key2=b[0],a.overlap.title="overlap: input/signature",a.buildOverlap=function(a,b){var c=b.overlap[a].join("\n"),d=a.slice(0,2),e=a.slice(3,5);return c?c:"The input "+d+" genes has no overlap with the "+e+" genes in signature."}}else{a.overlap.templateUrl="partials/overlap_CD.html";var b=Object.keys(a.entries[0].overlap).sort();a.overlap.key1=b[1],a.overlap.key2=b[0],a.overlap.title="overlap: (gene symbol) (input value) (signature value)",a.buildOverlap=function(b,c){var d=_.map(_.zip(a.uniqInput[b].genes,a.uniqInput[b].vals,c),function(a){return a.join("	")}).join("\n");return d?d:"The input "+b.slice(0,2)+" genes has no overlap with the genes in signature."}}}if(b.shareID in c)a.entries=c[b.shareID].entries,a.shareURL=baseURL+b.shareID,a.input=c[b.shareID].input,"uniqInput"in c[b.shareID]&&(a.uniqInput=c[b.shareID].uniqInput),g();else if(_.contains(f.keys(),b.shareID)){var h=f.get(b.shareID);a.entries=h.entries,a.shareURL=baseURL+b.shareID,a.input=h.input,"uniqInput"in h&&(a.uniqInput=h.uniqInput),g()}else d.get(baseURL+b.shareID).success(function(b){a.entries=b.results.topMeta,a.shareURL=baseURL+b.results.shareId,a.input=b.input,"uniqInput"in b.results&&(a.uniqInput=b.results.uniqInput),g()});a.downloadMeta=function(a){var b=baseURL+"meta?sig_id="+a;window.location=b}}]);var services=angular.module("services",[]);services.factory("loadExamples",["$http","$q",function(a,b){var c=b.defer();return a.get("data/nosology.json").success(function(a){c.resolve(a)}),c.promise}]),services.factory("loadGEO",["$http","$q",function(a,b){var c=b.defer();return a.get("diseases").success(function(a){c.resolve(_.sortBy(a,"term"))}),c.promise}]),services.factory("buildQueryData",[function(){return function(a){var b={};b.data={},b.config={},b.config.aggravate=a.aggravate,b.config.share=a.share;var c=S(a.upGenes.toUpperCase()).trim().split("\n"),d=c[0].split(",");if(d.length>1)return b.config.searchMethod="CD",b.data={},b.data.genes=[],b.data.vals=[],c.forEach(function(a){var c=a.split(",");b.data.genes.push(S(c[0]).trim().s),b.data.vals.push(parseFloat(S(c[1]).trim().s))}),b;b.config.searchMethod="geneSet",b.data={};_.uniq(c);b.data.upGenes=_.map(c,function(a){return S(a).trim().s});var e=_.uniq(S(a.dnGenes.toUpperCase()).trim().split("\n"));return b.data.dnGenes=_.map(e,function(a){return S(a).trim().s}),b}}]),services.factory("loadEbovs",["$http","$q",function(a,b){var c=b.defer();return a.get("data/ebovs.json").success(function(a){var b={ebov30min:"EBOV signature 30 minutes",ebov60min:"EBOV signature 60 minutes",ebov120min:"EBOV signature 120 minutes"},d=["ebov30min","ebov60min","ebov120min"],e=_.map(d,function(c){var d={};return d.name=b[c],d.genes=a[c].genes,d.vals=a[c].vals,d});c.resolve(e)}),c.promise}]),services.factory("loadExample",["$http","$q",function(a,b){function c(c,d){var e=function(){var e=b.defer(),f={};return a.get(c).success(function(b){f.up=b,a.get(d).success(function(a){f.dn=a,e.resolve(f)})}),e.promise};return e}var d={};return d["default"]=c("data/example-up-genes-remove-first-three.txt","data/example-dn-genes.txt"),d.signature=function(){var c=b.defer();return a.get("data/enrichrFuzzy.txt").success(function(a){c.resolve(a)}),c.promise},d}]),services.factory("matchByNameFactory",function(){return function(a,b){return function(c){return _.filter(a,function(a){return b(a)==c})[0]}}}),services.factory("resultStorage",function(){var a={};return a}),services.factory("util",function(){var a={};return a.getTag=function(a){var b;return a&&a.length>0&&(b=a.filter(function(a){return"tag"==a.key.toLowerCase()})[0],b||(b=a[0])),b},a.getTimeStamp=function(a){var b=a.substring(0,8);return new Date(1e3*parseInt(b,16))},a});